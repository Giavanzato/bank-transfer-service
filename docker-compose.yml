version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      NODE_ENV: development
    ports:
      - '3000:3000' # NestJS API
      - '5555:5555' # Prisma Studio
      - '9229:9229' # Debugger
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules # WICHTIG: Verhindert Konflikte zwischen Host- und Container-Node_Modules!
    command: yarn start:dev

volumes:
  db_data:
